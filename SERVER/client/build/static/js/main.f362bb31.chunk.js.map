{"version":3,"sources":["actions/ActionTypes.js","components/common/SideBar.js","components/common/MyNav.js","_images/_avatars/users/ohyes.png","actions/UserInfo.js","components/common/UISettingsMenu.js","actions/index.js","components/common/Layout.js","components/common/CustomRoutes.js","components/Pages/Redirection/index.js","components/common/CopyRights.js","_logo/logo.svg","components/Pages/Login/index.js","components/Pages/Register/Policy.js","components/common/FNValidator.js","components/Pages/Register/RegisterBox.js","components/Pages/Register/index.js","components/common/UICircularProgress.js","components/common/UICharts.js","components/Pages/Landing/index.js","components/Pages/Projects/ProjectCard.js","components/common/UIPersonRow.js","components/Pages/Projects/PersonList.js","components/Pages/Projects/ProjectAddDialog.js","components/Pages/Projects/index.js","components/Pages/Error/404.js","App.js","_reducers/counter.js","_reducers/user.js","components/common/Theme.js","_reducers/ui.js","_reducers/config.js","_reducers/index.js","_store/index.js","components/common/UISnackBar.js","index.js"],"names":["NUMBER_INCREMENT","NUMBER_DECREMENT","SET_COLOR","SET_THEME","SET_MENU_APPEAR_POSITION","GET_AUTHENTICATED","OUT_AUTHENTICATED","DEV_SET_AUTH","ENV_IS_DEV","SET_PROJECT_PERSON_LIST","SET_PROJECT_PERSON_LIST_INIT","useStyles","makeStyles","list","width","fullList","menuList","MENU_ID","MENU_NAME","MENU_ICON_NAME","MENU_PUSH_LINK","MENU_PERMISSION","connect","state","position","ui","menuAppearPosition","props","classes","React","useState","positinal","setPositinal","toggleDrawer","open","event","type","key","Fragment","Tooltip","title","IconButton","color","onClick","SwipeableDrawer","anchor","onClose","onOpen","className","role","onKeyDown","map","item","index","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","MyNav","this","root","AppBar","Toolbar","Box","flexGrow","ml","Typography","variant","user","auth","handleSessionQuit","Component","dispatch","sessionStorage","removeItem","types","withStyles","theme","flewGrow","marginLeft","spacing","mr","marginRight","icon","name","UISettingsMenu","handleClick","handleSetTheme","enqueueSnackbar","handleSetMenuAppearPosition","handleClose","setState","handleOpen","hidden","exampleWrapper","SpeedDial","ariaLabel","speedDial","style","palette","text","action","SpeedDialAction","tooltipTitle","value","actions","bottom","right","top","left","withSnackbar","Layout","myNav","component","pt","height","minHeight","background","default","hourlyGreetings","CustomRoutes","history","push","layout","rest","ThemeProvider","render","PureComponent","defaultProps","withRouter","Redirection","doRedirection","console","log","pathname","from","location","copyRight","date","Date","align","getFullYear","CopyRights","Login","handleChange","e","nextValue","info","target","loginCheck","vars","user_id","user_password","Axios","post","then","res","data","storageItem","MEM_USERID","MEM_NAME","MEM_NICKNAME","MEM_BIRTHDAY","MEM_DEPT_NO","MEM_AGE","MEM_EMPNO","MEM_MENU_APPEAR_POSITION","MEM_IMAGE","setItem","JSON","stringify","getAuthenticated","member","catch","err","devLogin","get","devAuth","pushRegister","awhile","Grow","in","logoBox","logo","src","alt","transformOrigin","timeout","loginBox","TextField","fullWidth","required","label","placeholder","onChange","onKeyUp","marginTop","autoComplete","display","Button","buttonMargin","justifyContent","alignItems","flexDirection","backgroundColor","paper","formBox","margin","Policy","mt","mb","Container","FNValidator","typeStr","isConfirmed","toUpperCase","test","length","callApi","a","fetch","response","json","departments","handleChangeShowPassWord","showPassword","handleValueChange","nextState","MEM","handleDepartSelect","handleFileChange","files","MEM_IMAGE_NAME","handleEnqueueSnackbar","msg","hasConfirmed","formData","FormData","append","MEM_PASSWORD","MEM_PASSWORD_CHECK","MEM_EMAIL","MEM_PHONE","MEM_HIREDATE","axios","headers","req","MEM_ID_CHECK","setTimeout","valueChecking","departs","Grid","container","justify","xs","accept","file","helperText","Visibility","VisibilityOff","inputProps","maxLength","FormControl","InputLabel","id","Select","labelId","MenuItem","DEPART_PK","DEPART_NAME","size","policyBox","policyContent","registerBox","RegisterBox","overflowY","circular","trans","CircularProgress","disableShrink","transform","getGoneDate","days","tmp","years","month","getMonth","day","getDate","String","uv","pv","amt","Chart","Paper","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","YAxis","Legend","Line","activeDot","r","UICircularProgress","Landing","md","lg","mh","chartsArea","UICharts","maxHeight","pr","bold","fontWeight","boxTop","boxBottom","avatar","GrowIn","setGrowIn","useEffect","infos","elevation","Card","CardActionArea","CardContent","gutterBottom","PROJ_TITLE","PROJ_AGENCY_NAME","noWrap","PROJ_DESCRIPTION","CardActions","AvatarGroup","max","Avatar","PersonRow","handleSwitchChecked","newMember","setProjectInOutPutPerson","checked","Array","isArray","projectMember","i","TableRow","TableCell","center","Switch","payload","PersonList","workForce","handleChangeStatus","isOpen","setProjectPersonInit","textFieldStyle","Dialog","dialog","maxWidth","DialogTitle","DialogContent","wrapper","DialogContentText","flexBox","TableContainer","Table","TableHead","TableBody","DialogActions","textAlign","appBar","flex","stepperTitleStyle","paddingTop","paddingBottom","buttonStyle","alignBox","Transition","forwardRef","ref","Slide","direction","TextFieldInputProps","min","defaultState","PROJ_CATEGORY","PROJ_MANAGER","PROJ_AGENCY_MANAGER","PROJ_AGENCY_MANAGER_PHONE","PROJ_AGENCY_MANAGER_EMAIL","PROJ_MAX_TASK","FullScreenDialog","setOpen","categoryList","setCategoryList","setInfos","useSnackbar","closeSnackbar","fetchCategory","handleChangeProjectInfos","fontSize","fullScreen","TransitionComponent","edge","aria-label","autoFocus","idx","_base","undefined","CATEGORY_PK","CATEGORY_NAME","Projects","getProjectList","params","projects","relative","m2","Error_404","App","exact","path","Register","initialState","number","dumbObject","d","u","m","b","counter","getItem","parse","_temp","status","splice","dark","createMuiTheme","main","secondary","purple","teal","blue","blueGrey","orange","nowThemeNum","Themes","bgColor","greeting","getHours","message","Object","keys","dev","window","hostname","indexOf","Config","reducers","combineReducers","config","store","createStore","subscribe","getState","UISnackBar","handleCloseSnackBar","goods","ReactDOM","Store","maxSnack","anchorOrigin","vertical","horizontal","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f362bb31.chunk.js","sourcesContent":["\r\n// ─────────────────────────────────────────────────── \r\nexport const NUMBER_INCREMENT = \"NUMBER_INCREMENT\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const NUMBER_DECREMENT = \"NUMBER_DECREMENT\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const SET_COLOR = \"SET_COLOR\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const SET_THEME = \"SET_THEME\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const SET_MENU_APPEAR_POSITION = \"SET_MENU_APPEAR_POSITION\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const PAGE_BACK_ROUTE = \"PAGE_BACK_ROUTE\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const GET_AUTHENTICATED = \"GET_AUTHENTICATED\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const OUT_AUTHENTICATED = \"OUT_AUTHENTICATED\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const DEV_SET_AUTH = \"DEV_SET_AUTH\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const ENV_IS_DEV = \"ENV_IS_DEV\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const SET_PROJECT_PERSON_LIST = \"SET_PROJECT_PERSON_LIST\";\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const SET_PROJECT_PERSON_LIST_INIT = \"SET_PROJECT_PERSON_LIST_INIT\";\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Tooltip,\r\n    IconButton,\r\n    SwipeableDrawer,\r\n    List, Divider, ListItem, ListItemIcon, ListItemText\r\n} from '@material-ui/core'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport VerticalIcon from '@material-ui/icons/VerticalSplit';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n});\r\n\r\nconst menuList = [\r\n    {\r\n        MENU_ID: '1',\r\n        MENU_NAME: '홈으로',\r\n        MENU_ICON_NAME: <HomeIcon />,\r\n        MENU_PUSH_LINK: '/',\r\n        MENU_PERMISSION: 'U'\r\n    },\r\n    {\r\n        MENU_ID: '2',\r\n        MENU_NAME: '프로젝트로',\r\n        MENU_ICON_NAME: <NoteIcon />,\r\n        MENU_PUSH_LINK: '/projects',\r\n        MENU_PERMISSION: 'U'\r\n    },\r\n    {\r\n        MENU_ID: '3',\r\n        MENU_NAME: '대시보드로',\r\n        MENU_ICON_NAME: <VerticalIcon />,\r\n        MENU_PUSH_LINK: '/dashboard',\r\n        MENU_PERMISSION: 'U'\r\n    },\r\n];\r\n\r\nfunction SideBar(props) {\r\n    const { position } = props;\r\n\r\n    const classes = useStyles();\r\n    const [positinal, setPositinal] = React.useState(false);\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setPositinal(open);\r\n    };\r\n\r\n\r\n    const list = position => (\r\n        <div\r\n            className={\r\n                classes.list + (position === 'top' || position === 'bottom' ? classes.fullList : '')\r\n            }\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(false)}\r\n            onKeyDown={toggleDrawer(false)}\r\n        >\r\n            {menuList.map((item, index) => {\r\n                return (\r\n                    <List key={item.MENU_ID}>\r\n                        <Link to={item.MENU_PUSH_LINK}>\r\n                            <ListItem button key={item.MENU_NAME}>\r\n                                <ListItemIcon>\r\n                                    {item.MENU_ICON_NAME}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={item.MENU_NAME} />\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                )\r\n            })}\r\n            <Divider />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Tooltip title={'메뉴'}>\r\n                    <IconButton  color=\"inherit\" onClick={toggleDrawer(true)}>\r\n                        <MenuIcon color=\"inherit\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <SwipeableDrawer\r\n                    anchor={position}\r\n                    open={positinal}\r\n                    onClose={toggleDrawer(false)}\r\n                    onOpen={toggleDrawer(true)}\r\n                >\r\n                    {list(position)}\r\n                </SwipeableDrawer>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(state => ({\r\n    position: state.ui.menuAppearPosition,\r\n}))(SideBar)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport * as actions from '../../_actions/UserInfo'\r\n\r\nimport {\r\n    Box, AppBar, Toolbar, IconButton, Typography, withStyles, Tooltip\r\n} from '@material-ui/core';\r\n\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport { Avatar } from '@material-ui/core';\r\n// import AccountTreeIcon from '@material-ui/icons/AccountTree';\r\n// import HomeIcon from '@material-ui/icons/Home';\r\nimport Sidebar from './SideBar';\r\n\r\nimport avatars from '../../_images/_avatars/users/ohyes.png';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flewGrow: 1\r\n    },\r\n    ml: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    mr: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flewGrow: 1\r\n    },\r\n\r\n});\r\n\r\nexport class MyNav extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position='fixed'>\r\n                    <Toolbar>\r\n                        <Sidebar />\r\n\r\n                        <Box flexGrow={1} className={classes.ml}>\r\n                            <Typography variant=\"h6\">\r\n\r\n                            </Typography>\r\n                        </Box>\r\n\r\n                        {this.props.user.auth ?\r\n                            <Tooltip title=\"로그아웃\">\r\n                                <Link to=\"/login\">\r\n                                    <IconButton color=\"inherit\" onClick={this.props.handleSessionQuit}>\r\n                                        <LockOpenIcon color=\"inherit\" />\r\n                                    </IconButton>\r\n                                </Link>\r\n                            </Tooltip>\r\n                            :\r\n                            <Typography>\r\n                                세션을 종료하세요.\r\n                            </Typography>\r\n                        }\r\n\r\n                        {/* TODO */}\r\n                        {/* <Avatar alt=\"1\" src={`http://localhost:5005/${this.props.user.member.MEM_IMAGE}`} /> */}\r\n                        {/* <Avatar alt=\"아바타\" src={avatars} /> */}\r\n                        \r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleSessionQuit: () => { dispatch(actions.outAuthenticated()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(MyNav))\r\n","export default __webpack_public_path__ + \"static/media/ohyes.b0c236cd.png\";","import * as types from '../_actions/ActionTypes';\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const setMemberInfos = member => {\r\n    return {\r\n        type: types.GET_AUTHENTICATED,\r\n        member\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const outAuthenticated = () => {\r\n    sessionStorage.removeItem('member');\r\n    return {\r\n        type: types.OUT_AUTHENTICATED,\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const devAuth = member => {\r\n    return {\r\n        type: types.DEV_SET_AUTH,\r\n        member\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const setProjectInOutPutPerson = payload => {\r\n    return {\r\n        type: types.SET_PROJECT_PERSON_LIST,\r\n        payload\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const setProjectPersonInit = () => {\r\n    return {\r\n        type: types.SET_PROJECT_PERSON_LIST_INIT\r\n    };\r\n};\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withSnackbar } from 'notistack'\r\nimport * as actions from '../../actions'\r\nimport { withStyles } from '@material-ui/core'\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport TouchAppTwoToneIcon from '@material-ui/icons/TouchAppTwoTone';\r\nimport { SpeedDial, SpeedDialAction } from '@material-ui/lab';\r\n\r\nconst styles = theme => ({\r\n    exampleWrapper: {\r\n        position: 'relative',\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\r\n            bottom: theme.spacing(2),\r\n            right: theme.spacing(2),\r\n        },\r\n        '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\r\n            top: theme.spacing(2),\r\n            left: theme.spacing(2),\r\n        },\r\n    },\r\n});\r\n\r\nconst List = [\r\n    { icon: <ColorLensIcon />, name: '테마 변경' },\r\n    { icon: <CachedIcon />, name: '메뉴 위치 변경' },\r\n];\r\n\r\nexport class UISettingsMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            open: false,\r\n            hidden: false\r\n        }\r\n    }\r\n\r\n    handleClick = (key) => {\r\n        switch (key) {\r\n            case '테마 변경':\r\n                this.props.handleSetTheme();\r\n                this.props.enqueueSnackbar('테마가 변경되었습니다.', { variant: 'success' });\r\n                break;\r\n\r\n            case '메뉴 위치 변경':\r\n                this.props.handleSetMenuAppearPosition();\r\n                this.props.enqueueSnackbar(`메뉴 위치가 변경되었습니다. (${this.props.menuAppearPosition})`, { variant: 'success' });\r\n\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.exampleWrapper}>\r\n                <SpeedDial\r\n                    ariaLabel=\"SpeedDial example\"\r\n                    className={classes.speedDial}\r\n                    hidden={this.state.hidden}\r\n                    icon={<TouchAppTwoToneIcon style={{ color: this.props.theme.palette.text.primary }} />}\r\n                    open={this.state.open}\r\n                    onOpen={this.handleOpen}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    {List.map((action) => (\r\n                        <SpeedDialAction\r\n                            key={action.name}\r\n                            icon={action.icon}\r\n                            tooltipTitle={action.name}\r\n                            value={this.props.theme}\r\n                            onClick={() => { this.handleClick(action.name) }}\r\n                        />\r\n                    ))}\r\n                </SpeedDial>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    theme: state.ui.theme,\r\n    menuAppearPosition: state.ui.menuAppearPosition\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleSetTheme: theme => { dispatch(actions.setTheme(theme)) },\r\n        handleSetMenuAppearPosition: position => { dispatch(actions.setMenuAppearPosition(position)) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withSnackbar(UISettingsMenu)))\r\n","import * as types from '../_actions/ActionTypes';\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const numIncrement = () => {\r\n    return {\r\n        type : types.NUMBER_INCREMENT\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const numDecrement = () => {\r\n    return {\r\n        type : types.NUMBER_DECREMENT\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const setColor = color => {\r\n    return {\r\n        type : types.SET_COLOR,\r\n        color\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const setMenuAppearPosition = menuAppearPosition => {\r\n    return {\r\n        type : types.SET_MENU_APPEAR_POSITION,\r\n        menuAppearPosition\r\n    };\r\n};\r\n\r\n// ─────────────────────────────────────────────────── \r\nexport const setTheme = theme => {\r\n    return {\r\n        type: types.SET_THEME,\r\n        theme\r\n    };\r\n};\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Box, withStyles } from '@material-ui/core';\r\n\r\nimport MyNav from './MyNav';\r\nimport UISettingsMenu from './UISettingsMenu';\r\n\r\nconst styles = theme => ({\r\n    root : {\r\n        \r\n    },\r\n});\r\n\r\nexport class Layout extends Component {\r\n\r\n    myNav = () => {\r\n        return (\r\n            this.props.user.auth && (\r\n                <>\r\n                    {this.props.user.auth &&\r\n                        <MyNav />\r\n                    }\r\n                </>\r\n            )\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { component: Component } = this.props;\r\n        return (\r\n            <>\r\n                {this.myNav()}\r\n                <Box\r\n                    pt={this.props.user.auth ? 10 : 0}\r\n                    style={{\r\n                        position: \"relative\",\r\n                        height: \"100%\",\r\n                        minHeight : \"100vh\",\r\n                        color: this.props.theme.palette.text.primary,\r\n                        background: this.props.theme.palette.background.default\r\n                    }}\r\n                >\r\n                    <Component />\r\n                </Box>\r\n                <UISettingsMenu />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    hourlyGreetings: state.ui.hourlyGreetings,\r\n    user: state.user,\r\n    theme: state.ui.theme\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Layout));\r\n","import React, { PureComponent } from 'react'\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Layout from './Layout'\r\n\r\nexport class CustomRoutes extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        !this.props.user.auth && this.props.history.push('/login');\r\n    }\r\n\r\n\r\n    render() {\r\n        const { component: Component, layout, ...rest } = this.props;\r\n        return (\r\n            <ThemeProvider theme={this.props.theme}>\r\n                <Route\r\n                    {...rest}\r\n                    render={props => {\r\n                        return (\r\n                            layout ?\r\n                                <Layout component={Component} />\r\n                                :\r\n                                <Component {...props} />\r\n                        )\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    hourlyGreetings: state.ui.hourlyGreetings,\r\n    user: state.user,\r\n    theme: state.ui.theme\r\n})\r\n\r\nCustomRoutes.defaultProps = {\r\n    layout: true\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(CustomRoutes))\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class Redirection extends Component {\r\n    doRedirection = () => {\r\n        console.log('redirecting...');\r\n        return (\r\n            this.props.user.auth ?\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/landing\",\r\n                        state: {\r\n                            from: this.props.location,\r\n                        },\r\n                    }}\r\n                />\r\n                :\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: {\r\n                            from: this.props.location,\r\n                        },\r\n                    }}\r\n                />\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                ${this.doRedirection()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    theme: state.ui.theme,\r\n    user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(Redirection)","import React, { Component } from 'react'\r\nimport { Typography } from '@material-ui/core'\r\n\r\nconst copyRight = () => {\r\n    const date = new Date();\r\n    return (\r\n        <Typography variant=\"h6\" component=\"h6\" align=\"center\">\r\n            2020 - {date.getFullYear()}, TB Co. all rights reserved.\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport class CopyRights extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {copyRight()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CopyRights\r\n","export default __webpack_public_path__ + \"static/media/logo.28f2087c.svg\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport * as actions from '../../../_actions/UserInfo'\r\nimport CopyRights from '../../common/CopyRights'\r\nimport logo from '../../../_logo/logo.svg'\r\nimport { withSnackbar } from 'notistack'\r\n\r\nimport { Box, Button, TextField, withStyles, Typography, Grow } from '@material-ui/core'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        minHeight: '100vh'\r\n    },\r\n    logoBox: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        width: '60%',\r\n        height: '100vh',\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    loginBox: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        width: '40%',\r\n        height: '100vh',\r\n    },\r\n    logo: {\r\n        width: theme.spacing(36),\r\n    },\r\n    formBox: {\r\n        width: theme.spacing(48),\r\n        margin: \"0 auto\"\r\n    },\r\n    buttonMargin: {\r\n        margin: '15px 20px'\r\n    }\r\n});\r\n\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            info: {},\r\n            awhile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.user.auth) this.props.history.push('/');\r\n        console.log(this.props.theme);\r\n        this.setState({\r\n            awhile: true\r\n        });\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        let nextValue = { ...this.state.info };\r\n        nextValue[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            info: nextValue\r\n        });\r\n    }\r\n\r\n    loginCheck = () => {\r\n        \r\n        const URL = '/api/users/login';\r\n        const vars = {\r\n            user_id: this.state.info.user_id,\r\n            user_password: this.state.info.user_password\r\n        }\r\n\r\n        if (!this.state.info.user_id || !this.state.info.user_password) {\r\n            return this.props.enqueueSnackbar('아이디 혹은 비밀번호를 입력해주세요.', { variant: 'warning' })\r\n        }\r\n\r\n\r\n        Axios.post(URL, vars)\r\n            .then(res => {\r\n                if (!res.data) {\r\n                    return this.props.enqueueSnackbar('아이디 혹은 비밀번호가 틀렸습니다.', { variant: 'error' });\r\n                } else {\r\n                    // 로그인 성공\r\n                    const storageItem = {\r\n                        MEM_USERID: res.data.MEM_USERID,\r\n                        MEM_NAME: res.data.MEM_NAME,\r\n                        MEM_NICKNAME: res.data.MEM_NICKNAME,\r\n                        MEM_BIRTHDAY: res.data.MEM_BIRTHDAY,\r\n                        MEM_DEPT_NO: res.data.MEM_DEPT_NO,\r\n                        MEM_AGE: res.data.MEM_AGE,\r\n                        MEM_EMPNO: res.data.MEM_EMPNO,\r\n                        MEM_MENU_APPEAR_POSITION: res.data.MEM_MENU_APPEAR_POSITION,\r\n                        MEM_IMAGE : res.data.MEM_IMAGE\r\n                    }\r\n\r\n                    // SessionStorage에서는 객체 형태의 저장을 지원하지 않는다.\r\n                    // 따라서, String 형태로 저장해두었다가, store에서 사용할 때 파싱한다.\r\n                    sessionStorage.setItem('member', JSON.stringify(storageItem));\r\n                    this.props.getAuthenticated(storageItem);\r\n                    this.props.enqueueSnackbar(`안녕하세요. ${this.props.user.member.MEM_NAME}님?`, { variant: 'success' });\r\n                    this.props.history.push('/landing');\r\n                }\r\n            }).catch((err) => {\r\n                this.props.enqueueSnackbar(`${err}`, { variant: 'error' });\r\n            });\r\n\r\n    }\r\n\r\n    devLogin = () => {\r\n        Axios.get('/users/login/dev')\r\n            .then(res => {\r\n                // SessionStorage에서는 객체 형태의 저장을 지원하지 않는다.\r\n                // 따라서, String 형태로 저장해두었다가, store에서 사용할 때 파싱한다.\r\n                sessionStorage.setItem('member', JSON.stringify(res.data));\r\n                this.props.devAuth(res.data);\r\n                this.props.enqueueSnackbar(`안녕하세요. ${this.props.user.member.MEM_NICKNAME}님?`, { variant: 'success' });\r\n                this.props.history.push('/landing');\r\n            }).catch((err) => {\r\n                this.props.enqueueSnackbar(`${err}`, { variant: 'error' });\r\n            });\r\n\r\n    }\r\n\r\n    pushRegister = () => {\r\n        this.props.history.push('/register');\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Box className={classes.root}>\r\n                <Grow in={this.state.awhile} >\r\n                    <Box className={classes.logoBox + ' mobile-logo'}>\r\n                        <img className={classes.logo} src={logo} alt=\"logo\" />\r\n                        <Typography variant=\"h2\" component=\"h2\">\r\n                            Sign In\r\n                        </Typography>\r\n                    </Box>\r\n                </Grow>\r\n                <Grow in={this.state.awhile} style={{ transformOrigin: '0 0 0' }} timeout={this.state.awhile ? 1000 : 0}>\r\n                    <Box className={classes.loginBox}>\r\n                        <Typography variant=\"h3\" component=\"h3\" align=\"center\">\r\n                            {this.props.hourlyGreetings}\r\n                        </Typography>\r\n                        <Box>\r\n                            <form>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    required\r\n                                    variant=\"filled\"\r\n                                    name=\"user_id\"\r\n                                    label=\"아이디\"\r\n                                    placeholder=\"example\"\r\n                                    onChange={this.handleChange}\r\n                                    onKeyUp={(e) => {\r\n                                        if (e.key === 'Enter') {\r\n                                            this.loginCheck();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    style={{ marginTop: '20px' }}\r\n                                    fullWidth\r\n                                    required\r\n                                    variant=\"filled\"\r\n                                    name=\"user_password\"\r\n                                    label=\"비밀번호\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"off\"\r\n                                    onChange={this.handleChange}\r\n                                    onKeyUp={(e) => {\r\n                                        if (e.key === 'Enter') {\r\n                                            this.loginCheck();\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </form>\r\n                            <Box display=\"flex\">\r\n                                <Button\r\n                                    className={classes.buttonMargin}\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    onClick={this.loginCheck}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    로그인하기\r\n                                </Button>\r\n                                <Button\r\n                                    className={classes.buttonMargin}\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    onClick={this.pushRegister}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    회원가입\r\n                                </Button>\r\n                            </Box>\r\n                            <Box display=\"flex\">\r\n                                <Button\r\n                                    className={classes.buttonMargin}\r\n                                    fullWidth\r\n                                    variant=\"outlined\"\r\n                                    onClick={this.devLogin}\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    개발 환경 로그인\r\n                                </Button>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            <CopyRights />\r\n                        </Box>\r\n                    </Box>\r\n                </Grow>\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    hourlyGreetings: state.ui.hourlyGreetings,\r\n    user: state.user,\r\n    theme: state.ui.theme\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getAuthenticated: (member) => { dispatch(actions.setMemberInfos(member)) },\r\n        devAuth: (member) => { dispatch(actions.devAuth(member)) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(withRouter(withStyles(styles)(Login))))","import { Container, Box, Typography, Divider } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport default function Policy() {\r\n    return (\r\n        <Box display=\"block\">\r\n            <Box mt={4} mb={4}>\r\n                <Typography variant=\"h5\" align='center'>\r\n                    이용약관\r\n                </Typography>\r\n            </Box>\r\n            <Divider />\r\n\r\n            <Container>\r\n                <Box mt={4} mb={4}>\r\n                    <Typography variant=\"h6\">제 1조 [목적]\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={4}>\r\n                    <Typography>본 약관은 코드비가 웹사이트(codeb.co.kr)를 통하여 제공하는 교육정보서비스(이하 “서비스”라 합니다)의 이용과 관련하여 코드비와 회원 사이에 권리ㆍ의무 및 책임사항 등을 규정함을 목적으로 합니다.<br />\r\n                    </Typography>\r\n                </Box>\r\n            </Container>\r\n\r\n            <Divider />\r\n\r\n            <Container>\r\n                <Box mt={4} mb={4}>\r\n                    <Typography variant=\"h6\">\r\n                        제 2조 [정의]\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={4}>\r\n                    <Typography>\r\n                        ①본 약관에서 사용하는 용어의 정의는 다음과 같습니다.<br />\r\n                        1.이용자 : 코드비의 웹사이트에 접속하여 본 약관에 따라 코드비가 제공하는 교육 콘텐츠 및 제반서비스를 이용하는 회원 및 비회원<br />\r\n                        2.회원 : 코드비의 웹사이트에 접속하여 본 약관에 동의함으로써 코드비와 이용계약을 체결하고 아이디(ID)를 부여받은 자로서 코드비가 제공하는 정보와 서비스를 지속적으로 이용할 수 있는 자<br />\r\n                        3.콘텐츠 : 코드비가 제작하여 웹사이트에서 제공 및 판매하는 온라인 강좌 및 기타 관련정보를 의미하며, 정보통신망 이용촉진 및 정보보호 등에 관한 법률 제2조제1항제1호의 규정에 의한 정보통신망에서 사용되는 부호ㆍ문자ㆍ음성ㆍ음향ㆍ이미지 또는 영상 등으로 표현된 자료 또는 정보<br />\r\n                        4.아이디(ID) : 회원의 식별 및 서비스 이용을 위하여 회원이 정하고 코드비가 승인하는 문자 또는 숫자의 조합을 말합니다.<br />\r\n                        5.비밀번호(PASSWORD) : 서비스 이용 시, 아이디와 일치되는 회원임을 확인하고 회원 개인정보 보호를 위하여 회원 자신이 정한 문자 또는 숫자의 조합<br />\r\n                        6.전자우편(Email) : 인터넷을 통한 우편 혹은 전기적 매체를 이용한 우편을 말합니다.<br />\r\n                        7.운영자(관리자) : 서비스의 전반적인 관리와 원활한 운영을 위하여 코드비에서 선정한 사람 또는 코드비<br />\r\n                        8.탈퇴: 회원이 이용계약을 종료하는 행위<br />\r\n                        ②제1항 각 호에 해당하는 정의 이외의 기타 용어의 정의에 대하여는 거래 관행 및 관계 법령에 따릅니다.<br />\r\n                        제 3조 [코드비 정보 등의 제공]<br />\r\n                        코드비는 상호, 대표자 성명, 주소, 전화번호(소비자의 불만을 처리하는 곳의 연락처 포함), FAX번호, 전자우편주소, 사업자등록번호, 통신판매업 신고번호 및 개인정보관리책임자 등을 이용자가 쉽게 알 수 있도록 온라인 서비스 초기화면에 게시합니다.<br />\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Divider />\r\n\r\n                <Box mt={4} mb={4}>\r\n                    <Typography variant=\"h6\">\r\n                        제 3조\r\n                    </Typography>\r\n                </Box>\r\n                <Box mb={4}>\r\n                    <Typography>\r\n                        ①본 약관에서 사용하는 용어의 정의는 다음과 같습니다.<br />\r\n                        1.이용자 : 코드비의 웹사이트에 접속하여 본 약관에 따라 코드비가 제공하는 교육 콘텐츠 및 제반서비스를 이용하는 회원 및 비회원<br />\r\n                        2.회원 : 코드비의 웹사이트에 접속하여 본 약관에 동의함으로써 코드비와 이용계약을 체결하고 아이디(ID)를 부여받은 자로서 코드비가 제공하는 정보와 서비스를 지속적으로 이용할 수 있는 자<br />\r\n                        3.콘텐츠 : 코드비가 제작하여 웹사이트에서 제공 및 판매하는 온라인 강좌 및 기타 관련정보를 의미하며, 정보통신망 이용촉진 및 정보보호 등에 관한 법률 제2조제1항제1호의 규정에 의한 정보통신망에서 사용되는 부호ㆍ문자ㆍ음성ㆍ음향ㆍ이미지 또는 영상 등으로 표현된 자료 또는 정보<br />\r\n                        4.아이디(ID) : 회원의 식별 및 서비스 이용을 위하여 회원이 정하고 코드비가 승인하는 문자 또는 숫자의 조합을 말합니다.<br />\r\n                        5.비밀번호(PASSWORD) : 서비스 이용 시, 아이디와 일치되는 회원임을 확인하고 회원 개인정보 보호를 위하여 회원 자신이 정한 문자 또는 숫자의 조합<br />\r\n                        6.전자우편(Email) : 인터넷을 통한 우편 혹은 전기적 매체를 이용한 우편을 말합니다.<br />\r\n                        7.운영자(관리자) : 서비스의 전반적인 관리와 원활한 운영을 위하여 코드비에서 선정한 사람 또는 코드비<br />\r\n                        8.탈퇴: 회원이 이용계약을 종료하는 행위<br />\r\n                        ②제1항 각 호에 해당하는 정의 이외의 기타 용어의 정의에 대하여는 거래 관행 및 관계 법령에 따릅니다.<br />\r\n                        제 3조 [코드비 정보 등의 제공]<br />\r\n                        코드비는 상호, 대표자 성명, 주소, 전화번호(소비자의 불만을 처리하는 곳의 연락처 포함), FAX번호, 전자우편주소, 사업자등록번호, 통신판매업 신고번호 및 개인정보관리책임자 등을 이용자가 쉽게 알 수 있도록 온라인 서비스 초기화면에 게시합니다.<br />\r\n                    </Typography>\r\n                </Box>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}\r\n","const FNValidator = (typeStr, target) => {\r\n    let isConfirmed = false;\r\n\r\n    switch (typeStr.toUpperCase()) {\r\n        // ID / 영문, 숫자만 사용하여 4 ~ 20글자\r\n        case \"ID\":\r\n            if (!/^[a-z0-9]{4,20}$/.test(target) || target === '') {\r\n                return false;\r\n            } else {\r\n                isConfirmed = true;\r\n            }\r\n            break;\r\n\r\n        // 성명 / 한글만 사용 가능 / 1글자 이상\r\n        case \"NAME\":\r\n            // TODO\r\n            // 특수문자 픽스해야함\r\n\r\n            if (!/^[가-힣]/.test(target) && target.length >= 1) {\r\n                \r\n                return false;\r\n            } else {\r\n                isConfirmed = true;\r\n            }\r\n\r\n            break;\r\n        \r\n        // 닉네임 / 한글 영문만 사용 가능\r\n        case \"NICKNAME\":\r\n            if (!/^[가-힣a-zA-Z]+$/.test(target)) {\r\n                return false;\r\n            } else {\r\n                isConfirmed = true;\r\n            }\r\n            break;\r\n\r\n        // 이메일 \r\n        case \"EMAIL\":\r\n            if (!/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(target)) {   \r\n                return false;\r\n            } else {\r\n                isConfirmed = true;\r\n            }\r\n            break;\r\n\r\n        // 연락처 형식 ( - 포함 )\r\n        case \"PHONE\":\r\n            if (target !== '') {\r\n                if (!/^\\d{3}-\\d{3,4}-\\d{4}$/.test(target)) {\r\n                    return false;\r\n                } else {\r\n                    isConfirmed = true;\r\n                }\r\n            }\r\n            break;\r\n        \r\n        // 사번 4자리 구성\r\n        case \"EMPNO\":\r\n            if (target !== '') {\r\n                if (target.length < 4) {   \r\n                    return false;\r\n                } else {\r\n                    isConfirmed = true;\r\n                }\r\n            }\r\n            break;\r\n        \r\n        default:\r\n            break;\r\n    }\r\n\r\n    console.log(`${typeStr} is confirmed`);\r\n    return isConfirmed;\r\n}\r\n\r\nexport default FNValidator;","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport {\r\n    Container, Grid, TextField, IconButton,\r\n    Box, FormControl, InputLabel, Select, MenuItem, Button\r\n} from '@material-ui/core'\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\r\nimport { withSnackbar } from 'notistack'\r\n\r\nimport FNValidator from '../../common/FNValidator';\r\n\r\nexport class index extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            MEM: {\r\n                MEM_IMAGE: null,\r\n                MEM_IMAGE_NAME: \"\",\r\n                MEM_USERID: \"\",\r\n                MEM_PASSWORD: \"\",\r\n                MEM_PASSWORD_CHECK: \"\",\r\n                MEM_NAME: \"\",\r\n                MEM_NICKNAME: \"\",\r\n                MEM_DEPT_NO: \"\",\r\n                MEM_EMAIL: \"\",\r\n                MEM_PHONE: \"\",\r\n                MEM_EMPNO: \"\",\r\n                MEM_HIREDATE: \"\",\r\n                MEM_BIRTHDAY: \"\",\r\n                MEM_ID_CHECK: false,\r\n            },\r\n            showPassword: false,\r\n            departs: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callApi()\r\n            .then(res => this.setState({ departs: res }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callApi = async () => {\r\n        let response = await fetch('/departments');\r\n        let departments = await response.json();\r\n        return departments;\r\n    }\r\n\r\n    handleChangeShowPassWord = () => {\r\n        this.setState({\r\n            showPassword: !this.state.showPassword ? true : false\r\n        });\r\n    }\r\n\r\n    handleValueChange = (e) => {\r\n        let nextState = { ...this.state.MEM };\r\n        nextState[e.target.name] = e.target.value;\r\n\r\n        this.setState({\r\n            MEM: nextState\r\n        });\r\n    }\r\n\r\n    handleDepartSelect = (e) => {\r\n        this.setState({\r\n            MEM: {\r\n                ...this.state.MEM,\r\n                MEM_DEPT_NO: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            MEM: {\r\n                ...this.state.MEM,\r\n                MEM_IMAGE: e.target.files[0],\r\n                MEM_IMAGE_NAME: e.target.value,\r\n            }\r\n        });\r\n    }\r\n\r\n    handleEnqueueSnackbar = (msg, type) => {\r\n        this.props.enqueueSnackbar(msg, type);\r\n    }\r\n\r\n    hasConfirmed = () => {\r\n        const URL = \"/register/signUp\"\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"multipart/form-data\"\r\n            }\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('MEM_IMAGE', this.state.MEM.MEM_IMAGE);\r\n        formData.append('MEM_IMAGE_NAME', this.state.MEM.MEM_IMAGE_NAME);\r\n        formData.append('MEM_USERID', this.state.MEM.MEM_USERID);\r\n        formData.append('MEM_PASSWORD', this.state.MEM.MEM_PASSWORD);\r\n        formData.append('MEM_PASSWORD_CHECK', this.state.MEM.MEM_PASSWORD_CHECK);\r\n        formData.append('MEM_NAME', this.state.MEM.MEM_NAME);\r\n        formData.append('MEM_NICKNAME', this.state.MEM.MEM_NICKNAME);\r\n        formData.append('MEM_DEPT_NO', this.state.MEM.MEM_DEPT_NO);\r\n        formData.append('MEM_EMAIL', this.state.MEM.MEM_EMAIL);\r\n        formData.append('MEM_PHONE', this.state.MEM.MEM_PHONE);\r\n        formData.append('MEM_EMPNO', this.state.MEM.MEM_EMPNO);\r\n        formData.append('MEM_HIREDATE', this.state.MEM.MEM_HIREDATE);\r\n        formData.append('MEM_BIRTHDAY', this.state.MEM.MEM_BIRTHDAY);\r\n\r\n        return axios.post(URL, formData, config)\r\n            .then((res, req) => {\r\n                this.setState({\r\n                    MEM_IMAGE: null,\r\n                    MEM_IMAGE_NAME: \"\",\r\n                    MEM_USERID: \"\",\r\n                    MEM_PASSWORD: \"\",\r\n                    MEM_PASSWORD_CHECK: \"\",\r\n                    MEM_NAME: \"\",\r\n                    MEM_NICKNAME: \"\",\r\n                    MEM_DEPT_NO: \"\",\r\n                    MEM_EMAIL: \"\",\r\n                    MEM_PHONE: \"\",\r\n                    MEM_EMPNO: \"\",\r\n                    MEM_HIREDATE: \"\",\r\n                    MEM_BIRTHDAY: \"\",\r\n                    MEM_ID_CHECK: false,\r\n                });\r\n                this.props.enqueueSnackbar('회원가입이 완료되었습니다.', 'success');\r\n                setTimeout(() => {\r\n                    this.props.history.push('/login');\r\n                }, 1000);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    valueChecking = () => {\r\n\r\n        const state = this.state.MEM;\r\n        let status = true;\r\n\r\n        for (let key in state) {\r\n            switch (key) {\r\n                case \"MEM_IMAGE\":\r\n\r\n                    break;\r\n                case \"MEM_IMAGE_NAME\":\r\n\r\n                    break;\r\n\r\n                case \"MEM_PASSWORD\":\r\n\r\n                    break;\r\n                case \"MEM_PASSWORD_CHECK\":\r\n\r\n                    break;\r\n                case \"MEM_HIREDATE\":\r\n\r\n                    break;\r\n                case \"MEM_BIRTHDAY\":\r\n\r\n                    break;\r\n                case \"MEM_ID_CHECK\":\r\n                    //     if (state[key] === false) {\r\n                    //         alert('ID 중복 체크가 필요합니다.', 'warning');\r\n                    //         return false;\r\n                    //     }\r\n\r\n                    break;\r\n\r\n                case \"MEM_USERID\":\r\n                    if (!FNValidator(\"id\", state[key])) {\r\n                        this.props.enqueueSnackbar('ID는 영문, 숫자만 사용하여 4 ~ 20글자여야 합니다.', 'warning');\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case \"MEM_NAME\":\r\n                    if (!FNValidator('name', state[key])) {\r\n                        this.props.enqueueSnackbar('성명은 한글만 사용 가능합니다.', 'warning');\r\n                        return false;\r\n                    }\r\n                    break;\r\n                case \"MEM_NICKNAME\":\r\n                    if (!FNValidator('nickname', state[key])) {\r\n                        this.props.enqueueSnackbar('닉네임은 한글 혹은 영문만 사용 가능합니다.', 'warning');\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case \"MEM_EMAIL\":\r\n                    if (!FNValidator('email', state[key])) {\r\n                        this.props.enqueueSnackbar('이메일 형식이 맞지 않습니다.', 'warning');\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case \"MEM_PHONE\":\r\n                    if (state[key] !== '') {\r\n                        if (!FNValidator('phone', state[key])) {\r\n                            this.props.enqueueSnackbar('연락처 형식이 맞지 않습니다.', 'warning');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"MEM_EMPNO\":\r\n                    if (state[key] !== '') {\r\n                        if (!FNValidator('empno', state[key])) {\r\n                            this.props.enqueueSnackbar('사번은 4자리로 구성됩니다.', 'warning');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case \"MEM_DEPT_NO\":\r\n                    if (state[key] === '') {\r\n                        this.props.enqueueSnackbar('부서는 반드시 필요합니다.', 'warning');\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n\r\n                default:\r\n\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.hasConfirmed();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box mt={8} mb={12}>\r\n                <Container>\r\n                    <Grid container justify='center' spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <Button\r\n                                    variant={this.state.MEM.MEM_IMAGE_NAME === \"\" ? \"outlined\" : \"contained\"}\r\n                                    component=\"label\"\r\n                                    color=\"inherit\"\r\n                                >\r\n                                    {this.state.MEM.MEM_IMAGE_NAME === \"\" ? \"프로필 이미지 선택\" : \"프로필 선택 완료!\"}\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        hidden\r\n                                        accept=\"image/*\"\r\n                                        file={this.state.MEM.MEM_IMAGE}\r\n                                        onChange={this.handleFileChange}\r\n                                    />\r\n                                </Button>\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <TextField\r\n                                    variant=\"filled\"\r\n                                    fullWidth\r\n                                    required\r\n                                    name=\"MEM_NAME\"\r\n                                    label=\"성명\"\r\n                                    onChange={this.handleValueChange}\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <TextField\r\n                                    variant=\"filled\"\r\n                                    fullWidth\r\n                                    required\r\n                                    name=\"MEM_NICKNAME\"\r\n                                    label=\"닉네임\"\r\n                                    onChange={this.handleValueChange}\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <TextField\r\n                                    variant=\"filled\"\r\n                                    fullWidth\r\n                                    required\r\n                                    name=\"MEM_USERID\"\r\n                                    label=\"ID\"\r\n                                    helperText=\"중복 체크 기능 필요\"\r\n                                    placeholder=\"영문, 숫자만 사용하여 4 ~ 20자 이내\"\r\n                                    onChange={this.handleValueChange}\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\">\r\n                                    {/* TODO  가로 100%*/}\r\n                                    <form>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            variant=\"filled\"\r\n                                            required\r\n                                            type={this.state.showPassword ? 'text' : 'password'}\r\n                                            name=\"MEM_PASSWORD\"\r\n                                            label=\"PASSWORD\"\r\n                                            autoComplete=\"off\"\r\n                                            onChange={this.handleValueChange}\r\n                                        />\r\n                                    </form>\r\n                                    <Box>\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            onClick={this.handleChangeShowPassWord}\r\n                                        >\r\n                                            {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <TextField\r\n                                    variant=\"filled\"\r\n                                    fullWidth\r\n                                    required\r\n                                    name=\"MEM_EMAIL\"\r\n                                    label=\"이메일\"\r\n                                    placeholder=\"example@example.com\"\r\n                                    onChange={this.handleValueChange}\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <TextField\r\n                                    variant=\"filled\"\r\n                                    fullWidth\r\n                                    name=\"MEM_PHONE\"\r\n                                    label=\"연락처\"\r\n                                    placeholder=\"010 - 0000 - 0000\"\r\n                                    onChange={this.handleValueChange}\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <TextField\r\n                                    variant=\"filled\"\r\n                                    fullWidth\r\n                                    name=\"MEM_EMPNO\"\r\n                                    label=\"사번\"\r\n                                    placeholder=\"4자리수\"\r\n                                    onChange={this.handleValueChange}\r\n                                    inputProps={{\r\n                                        maxLength: 4\r\n                                    }}\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <FormControl variant=\"filled\" fullWidth>\r\n                                    <InputLabel id=\"MEM_DEPART_NO\">부서 *</InputLabel>\r\n                                    {this.state.departs ?\r\n                                        <Select\r\n                                            labelId=\"DEPART_SELECT\"\r\n                                            id=\"DEPART_SELECT\"\r\n                                            value={this.state.MEM.MEM_DEPT_NO}\r\n                                            onChange={this.handleDepartSelect}\r\n                                        >\r\n                                            {this.state.departs.map((item, index) => {\r\n                                                return (\r\n                                                    <MenuItem key={index} value={item.DEPART_PK}>{item.DEPART_NAME}({item.DEPART_PK})</MenuItem>\r\n                                                )\r\n                                            })}\r\n                                        </Select>\r\n                                        :\r\n                                        ''\r\n                                    }\r\n                                </FormControl>\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Container>\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    onClick={this.valueChecking}\r\n                                >\r\n                                    가입하기\r\n                                </Button>\r\n                            </Container>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Container >\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)((withRouter(withSnackbar(index))))\r\n","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Grow, Typography, withStyles, Box, Divider } from '@material-ui/core'\r\n\r\nimport Policy from './Policy'\r\nimport RegisterBox from './RegisterBox'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        minHeight: '100vh'\r\n    },\r\n    policyBox: {\r\n        display: 'flex',\r\n        width: '60%',\r\n        height: '100vh',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        overflowY: 'scroll',\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    title: {\r\n        minHeight: '10%'\r\n    },\r\n    policyContent: {\r\n        minHeight: '65%'\r\n    },\r\n    registerBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '40%',\r\n        height: '100vh',\r\n        overflowY: 'scroll'\r\n    },\r\n});\r\n\r\nexport class index extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            awhile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            awhile: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Box className={classes.root + ' mobile-column'}>\r\n                <Grow in={this.state.awhile} >\r\n                    <Box className={classes.policyBox + ' mobile-column'}>\r\n                        <Box className={classes.policyContent}>\r\n                            <Container>\r\n                                <Policy />\r\n                            </Container>\r\n                        </Box>\r\n                    </Box>\r\n                </Grow>\r\n                <Grow in={this.state.awhile} style={{ transformOrigin: '0 0 0' }} timeout={this.state.awhile ? 1000 : 0}>\r\n                    <Box className={classes.registerBox + ' mobile-column'}>\r\n                        <Box mt={4} mb={4}>\r\n                            <Typography variant=\"h4\" align=\"center\">\r\n                                회원가입\r\n                            </Typography>\r\n                        </Box>\r\n                        <Divider />\r\n                        {this.state.awhile && <RegisterBox />}\r\n                    </Box>\r\n                </Grow>\r\n            </Box >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(index))\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    trans: {\r\n        position: 'absolute;',\r\n        top: '45%;',\r\n        left: '50%;',\r\n        transform: 'translate(-50%,-50%);',\r\n    }\r\n});\r\n\r\nexport class circular extends Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.trans}><CircularProgress color='inherit' disableShrink /></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(circular));\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport axios from 'axios';\r\nimport { Paper, withStyles } from '@material-ui/core'\r\nimport UICircularProgress from '../common/UICircularProgress'\r\nimport { minHeight } from '@material-ui/system';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(4)\r\n    }\r\n});\r\n\r\nconst getGoneDate = days => {\r\n    let tmp = new Date();\r\n    \r\n    let years = tmp.getFullYear();\r\n    let month = tmp.getMonth();\r\n    let day = tmp.getDate() - days;\r\n\r\n    const result = `${String(years)}-${String(month)}-${String(day)}`;\r\n    \r\n    return result;\r\n}\r\n \r\nconst data = [\r\n    {\r\n        name: getGoneDate(20), uv: 10040, pv: 2400, amt: 7000,\r\n    },\r\n    {\r\n        name: getGoneDate(15), uv: 3000, pv: 1398, amt: 2210,\r\n    },\r\n    {\r\n        name: getGoneDate(7), uv: 2000, pv: 9800, amt: 2290,\r\n    },\r\n    {\r\n        name: getGoneDate(5), uv: 2780, pv: 12000, amt: 2000,\r\n    },\r\n    {\r\n        name: getGoneDate(3), uv: 1890, pv: 4800, amt: 2181,\r\n    },\r\n    {\r\n        name: getGoneDate(2), uv: 2390, pv: 3800, amt: 2500,\r\n    },\r\n    {\r\n        name: getGoneDate(1), uv: 3490, pv: 4300, amt: 2100,\r\n    },\r\n];\r\n\r\nclass Chart extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                data: data\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    // https://api.github.com/repos/joo98e/CDMS_DEMO/commits\r\n    // TODO\r\n    // https://recharts.org/en-US/guide/customize\r\n    // theme 가져와서 입히기\r\n    // git 이력으로 그래프 그리기\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper>\r\n                {this.state.data ?\r\n                    <ResponsiveContainer width=\"99%\" aspect={3}>\r\n                        <LineChart\r\n                            width={500}\r\n                            height={300}                            \r\n                            data={data}\r\n                            margin={{\r\n                                top: 50, right: 30, left: 20, bottom: 30,\r\n                            }}\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"4 4\" />\r\n                            <XAxis dataKey=\"name\" stroke=\"#8884d8\" />\r\n                            <YAxis stroke=\"#8884d8\" />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n                            <Line type=\"monotone\" dataKey=\"amt\" stroke=\"#82ca9d\" />\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                    :\r\n                    <Paper style={{minHeight : '406px'}}>\r\n                        <UICircularProgress />\r\n                    </Paper>\r\n                }\r\n            </Paper>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Chart)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Grid, Paper, Typography, Container, withStyles } from '@material-ui/core'\r\nimport UICharts from '../../common/UICharts'\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    chartsArea: {\r\n        position: 'relative',\r\n    },\r\n    mh: {\r\n        minHeight : '300px'\r\n    }\r\n});\r\n\r\n// const personnel = [\r\n//     // join 결과\r\n//     {\r\n//         MEM_ID: '1',\r\n//         MEM_NAME: '정태복',\r\n//         MEM_NICKNAME: 'joo98e',\r\n//         MEM_DEPT_NO: '1001',\r\n//         MEM_EMAIL: 'blackishhood@mirimmedialab.co.kr',\r\n//         MEM_PHONE: '010-5614-1328',\r\n//         MEM_HIREDATE: '2020-05-01',\r\n//         MEM_BIRTHDAY: '1994-09-28',\r\n//     },\r\n//     {\r\n//         MEM_ID: '2',\r\n//         MEM_NAME: '정태영',\r\n//         MEM_NICKNAME: 'xodud5621',\r\n//         MEM_DEPT_NO: '1001',\r\n//         MEM_EMAIL: 'xodud5621@mirimmedialab.co.kr',\r\n//         MEM_PHONE: '010-5614-1328',\r\n//         MEM_HIREDATE: '2018-05-11',\r\n//         MEM_BIRTHDAY: '2002-01-22',\r\n//     },\r\n//     {\r\n//         MEM_ID: '3',\r\n//         MEM_NAME: '최현중',\r\n//         MEM_NICKNAME: 'askamplee',\r\n//         MEM_DEPT_NO: '1001',\r\n//         MEM_EMAIL: 'blackishhood@mirimmedialab.co.kr',\r\n//         MEM_PHONE: '010-5614-1328',\r\n//         MEM_HIREDATE: '2020-04-01',\r\n//         MEM_BIRTHDAY: '1993-04-01',\r\n//     },\r\n// ];\r\n\r\nexport class Landing extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Container className={classes.root}>\r\n                {/* <UICharts /> */}\r\n                {/* http://apis.data.go.kr/1262000/CountryCovid19SafetyServiceNew/getCountrySafetyNewsListNew?serviceKey=LwAgyVybTLt0KK2YRMagmhPRx53xp75rBqeTggtAwssoMuv1S3QIC8cE16yehXbEfaxxSAh9Q4MUu3MVPQ%2B%2Fng%3D%3D&returnType=JSON&nomOfRows=2&pageNo=1 */}\r\n                <React.Fragment>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6} lg={6}>\r\n                            <Paper className={classes.mh}>\r\n                                sdsiofsdjif\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} lg={6}>\r\n                            <Paper className={classes.mh}>\r\n                                sdsiofsdjif\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} className={classes.chartsArea}>\r\n                            <UICharts />\r\n                        </Grid>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            </Container>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Landing))\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Grid, Grow, Paper,\r\n  Card, CardActionArea, CardActions, CardContent,\r\n  Button,\r\n  Typography,\r\n  Avatar,\r\n  makeStyles,\r\n} from '@material-ui/core/';\r\n// import StyledButton from '../../common/StyledButton';\r\nimport { AvatarGroup } from '@material-ui/lab'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '200px',\r\n    maxHeight: '400px',\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  pr: {\r\n    position: 'relative'\r\n  },\r\n  bold: {\r\n    fontWeight: '400'\r\n  },\r\n  boxTop: {\r\n    height: '170px'\r\n  },\r\n  boxBottom: {\r\n    width: '100%',\r\n    height: '30px'\r\n  },\r\n  avatar: {\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: theme.palette.background.paper,\r\n  }\r\n}));\r\n\r\nfunction ProjectCard(props) {\r\n  const classes = useStyles();\r\n\r\n  const [GrowIn, setGrowIn] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      setGrowIn(true);\r\n    }, 150);\r\n\r\n  }, []);\r\n  \r\n  const infos = {\r\n    ...props.infos\r\n  }\r\n\r\n  // TODO 이미지 만들기\r\n  // TODO 속한 사람의 아바타 나타내기\r\n\r\n  return (\r\n    <Grid item xs={12} md={6} lg={4} className={classes.pr}>\r\n      <Grow\r\n        in={GrowIn}\r\n        style={{ transformOrigin: '0 0 0' }}\r\n        {...(GrowIn ? { timeout: 400 } : {})}\r\n      >\r\n        <Paper elevation={4}>\r\n          <Card className={classes.root}>\r\n            <CardActionArea>\r\n              <CardContent className={classes.boxTop}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {infos.PROJ_TITLE}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"inherit\">기관명</Typography>\r\n                <Typography variant=\"body2\" color=\"inherit\" component=\"p\">\r\n                  {infos.PROJ_AGENCY_NAME}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"inherit\">설명</Typography>\r\n                <Typography variant=\"body2\" color=\"inherit\" component=\"p\" noWrap>\r\n                  {infos.PROJ_DESCRIPTION}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <AvatarGroup max={6}>\r\n                <Avatar className={classes.avatar} alt=\"Remy Sharp\">R</Avatar>\r\n                <Avatar className={classes.avatar} alt=\"Travis Howard\">T</Avatar>\r\n              </AvatarGroup>\r\n            </CardActions>\r\n            <CardActions>\r\n              <Button className={classes.boxBottom} variant=\"outlined\" size=\"small\">\r\n                <Typography variant=\"body2\" color=\"textPrimary\">MORE</Typography>\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Paper>\r\n      </Grow>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default connect(state => ({\r\n  theme: state.ui.theme\r\n}))(ProjectCard)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../_actions/UserInfo';\r\n\r\nimport {\r\n    Avatar, withStyles, TableRow, TableCell, Switch,\r\n} from '@material-ui/core';\r\n\r\nconst style = theme => ({\r\n    center: {\r\n        margin: \"0 auto\"\r\n    }\r\n});\r\n\r\nexport class PersonRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            checked: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if(Array.isArray(this.props.projectMember) && this.props.projectMember.length !== 0){\r\n            for (let i in this.props.projectMember){\r\n                if(this.props.projectMember[i].id === this.props.data.id){\r\n                    this.setState({checked : true});\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    /*\r\n        TODO    \r\n        체크 박스 만들기\r\n        아바타 경로 찾아주기\r\n    */\r\n\r\n    handleSwitchChecked = (newMember) => {\r\n        this.props.setProjectInOutPutPerson(newMember);\r\n\r\n        this.setState({\r\n            checked: !this.state.checked ? true : false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <TableRow>\r\n                <TableCell>\r\n                    <Avatar className={classes.center} />\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                    {this.props.data.MEM_NAME}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                    {this.props.data.DEPART_NAME}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                    {this.props.data.MEM_USERID}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                    {this.props.data.MEM_EMAIL}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                    <Switch\r\n                        checked={this.state.checked}\r\n                        onChange={() => { this.handleSwitchChecked(this.props.data) }}\r\n                    />\r\n                </TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projectMember: state.user.projectMember\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setProjectInOutPutPerson: (payload) => { dispatch(actions.setProjectInOutPutPerson(payload)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(style)(PersonRow));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withSnackbar } from 'notistack';\r\nimport * as actions from '../../../_actions/UserInfo';\r\n\r\n\r\nimport {\r\n    Button, withStyles, Box,\r\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\r\n    Divider, Paper, Chip,\r\n    TableContainer, Table, TableHead, TableBody, TableRow, TableCell\r\n} from '@material-ui/core'\r\n\r\nimport PersonRow from '../../common/UIPersonRow';\r\nimport UICircularProgress from '../../common/UICircularProgress';\r\n\r\nconst styles = theme => ({\r\n    textFieldStyle: {\r\n        width: '30vw',\r\n        textAlign: 'right',\r\n    },\r\n    wrapper: {\r\n        height: '70vh',\r\n    },\r\n    flexBox: {\r\n        display: 'flex'\r\n    }\r\n});\r\n\r\nexport class PersonList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            workForce: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // 인력 리스트\r\n        this.callApi()\r\n            .then(res => {\r\n                this.setState({ workForce: res });\r\n                console.log(this.state.workForce);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callApi = async () => {\r\n        let response = await fetch('/users/project/work');\r\n        let workForce = await response.json();\r\n\r\n        return workForce;\r\n    }\r\n\r\n    handleChangeStatus = (type) => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen ? true : false\r\n        });\r\n\r\n        if (type === \"SUBMIT\") {\r\n            this.props.enqueueSnackbar('내부 인력 구성이 반영되었습니다.', { variant: 'success' });\r\n        } else if (type === \"CANCLE\") {\r\n            this.props.enqueueSnackbar('내부 인력 구성이 취소되었습니다.', { variant: 'warning' });\r\n\r\n            this.props.setProjectPersonInit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Button className={classes.textFieldStyle} color=\"inherit\" variant=\"outlined\" onClick={this.handleChangeStatus}>\r\n                    구성하기\r\n                </Button>\r\n\r\n                {\r\n                    this.state.isOpen &&\r\n                    <Dialog className={classes.dialog} open={this.state.isOpen} onClose={this.handleChangeStatus} fullWidth maxWidth=\"lg\">\r\n                        <DialogTitle>\r\n                            프로젝트 참여 인원 구성\r\n                        </DialogTitle>\r\n\r\n                        <DialogContent>\r\n                            <Box className={classes.wrapper}>\r\n                                <DialogContentText className={classes.flexBox}>\r\n                                    내부 인력 구성\r\n                                </DialogContentText>\r\n                                <Divider />\r\n\r\n                                {/* {\r\n                                    this.props.projectMember.map((item, idx) => {\r\n                                        return <Chip key={idx} variant=\"outlined\" size=\"small\" label=\"Basic\" />\r\n                                    })\r\n                                } */}\r\n\r\n                                {/* TODO 검색란 / onchange로 준비된 리스트에서 filter */}\r\n                                {/* Chip */}\r\n                                {/* Chip array */}\r\n                                {/* search 박스 오른쪽 위로 올리기 */}\r\n                                {/* https://material-ui.com/components/chips/ */}\r\n\r\n                                {\r\n                                    this.state.workForce ?\r\n                                        <TableContainer component={Paper} color=\"inherit\">\r\n                                            <Table>\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell align=\"center\"></TableCell>\r\n                                                        <TableCell align=\"left\">성명</TableCell>\r\n                                                        <TableCell align=\"left\">부서</TableCell>\r\n                                                        <TableCell align=\"left\">ID</TableCell>\r\n                                                        <TableCell align=\"left\">이메일</TableCell>\r\n                                                        <TableCell align=\"left\">구성</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {\r\n                                                        this.state.workForce.map((item, index) => {\r\n                                                            return <PersonRow key={index} data={item} />\r\n                                                        })\r\n                                                    }\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n                                        :\r\n                                        <UICircularProgress />\r\n                                }\r\n\r\n                            </Box>\r\n\r\n                            {/* <Box className={classes.wrapper}>\r\n                                <DialogContentText>\r\n                                    외부 인력 구성\r\n                                </DialogContentText>\r\n                            </Box> */}\r\n                            \r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={() => { this.handleChangeStatus(\"CANCLE\") }} color=\"inherit\" variant=\"outlined\">\r\n                                앗, 취소예요!\r\n                            </Button>\r\n                            <Button onClick={() => { this.handleChangeStatus(\"SUBMIT\") }} color=\"inherit\" variant=\"outlined\">\r\n                                완료!\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projectMember : state.user.projectMember\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setProjectPersonInit: () => { dispatch(actions.setProjectPersonInit()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)\r\n    (withStyles(styles)\r\n    (withSnackbar(PersonList))\r\n);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios'\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n    Container, TextField, FormControl, Select, Button, Dialog, Typography,\r\n    ListItemText, ListItem, List, Divider, AppBar, Toolbar, IconButton, MenuItem,\r\n    Grid, Box\r\n} from '@material-ui/core';\r\n\r\nimport NotificationImportantIcon from '@material-ui/icons/NotificationImportant';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nimport PersonList from './PersonList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n    trans: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n    flexBox: {\r\n        display: 'flex',\r\n    },\r\n    textFieldStyle: {\r\n        width: '30vw',\r\n        textAlign: 'right'\r\n    },\r\n    stepperTitleStyle: {\r\n        display: 'block',\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4)\r\n    },\r\n    buttonStyle: {\r\n        display: 'block',\r\n        margin: '0 auto'\r\n    },\r\n    alignBox: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    center: {\r\n        width: \"15em\",\r\n        margin: '0 auto 2em auto'\r\n    }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst TextFieldInputProps = {\r\n    min: 0,\r\n    style: {\r\n        textAlign: 'right'\r\n    }\r\n}\r\n\r\nconst defaultState = {\r\n    PROJ_TITLE: \"\",\r\n    PROJ_CATEGORY : \"\",\r\n    PROJ_DESCRIPTION : \"\",\r\n    PROJ_MANAGER : \"\",\r\n    PROJ_AGENCY_NAME : \"\",\r\n    PROJ_AGENCY_MANAGER : \"\",\r\n    PROJ_AGENCY_MANAGER_PHONE : \"\",\r\n    PROJ_AGENCY_MANAGER_EMAIL : \"\",\r\n    PROJ_MAX_TASK : \"\"\r\n}\r\n\r\nexport default function FullScreenDialog() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [categoryList, setCategoryList] = React.useState(null);\r\n    const [infos, setInfos] = React.useState(defaultState);\r\n    const [steps, setSteps] = React.useState(0);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    React.useEffect(() => {\r\n\r\n        const fetchCategory = async () => {\r\n            await axios.get('/projects/category')\r\n                .then(res => {\r\n                    setCategoryList(res.data);\r\n                });\r\n        }\r\n\r\n        fetchCategory();\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, []);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setInfos(defaultState);\r\n    };\r\n\r\n    const handleValidateValue = () => {\r\n        console.log(12312);\r\n        let _base = \"PROJ_\";\r\n        \r\n        for (let idx in infos) {\r\n            \r\n            switch (idx) {\r\n                case _base + \"TITLE\":\r\n                    console.log(\"here i am111\");\r\n                    if (infos[idx] === \"\" || infos[idx] === undefined) {\r\n                        enqueueSnackbar('제목 없는 프로젝트는 없어요.', {variant:'warning'});\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case _base + \"CATEGORY\":\r\n                    if (infos[idx] === \"\" || infos[idx] === undefined) {\r\n                        enqueueSnackbar('사업 구분이 필요합니다.', {variant:'warning'});\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case _base + \"DESCRIPTION\":\r\n                    if (infos[idx] === \"\" || infos[idx] === undefined) {\r\n                        enqueueSnackbar('간단한 설명이라도 추가해주세요!', {variant:'warning'});\r\n                        return false;\r\n                    } else if (infos[idx].length < 10) {\r\n                        enqueueSnackbar(\"짧아도 너무 짧은데요!\", {variant:'error'});\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case _base + \"MANAGER\":\r\n                    if (infos[idx] === \"\" || infos[idx] === undefined) {\r\n                        enqueueSnackbar('프로젝트 담당자이 필요합니다.', { variant: 'warning' });\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case _base + \"AGENCY_NAME\":\r\n                    if (infos[idx] === \"\" || infos[idx] === undefined) {\r\n                        enqueueSnackbar('기관명이 필요합니다.', { variant: 'warning' });\r\n                        return false;\r\n                    }\r\n                    break;\r\n\r\n                case _base + \"AGENCY_MANAGER\":\r\n\r\n                    break;\r\n\r\n                case _base + \"AGENCY_MANAGER_PHONE\":\r\n\r\n                    break;\r\n\r\n                case _base + \"AGENCY_MANAGER_EMAIL\":\r\n\r\n                    break;\r\n\r\n                case _base + \"MAX_TASK\":\r\n\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChangeProjectInfos = (e) => {\r\n        let nextValue = { ...infos }\r\n        nextValue[e.target.name] = e.target.value;\r\n        setInfos({ ...nextValue });\r\n        console.log(infos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton color=\"inherit\" className={classes.trans} onClick={handleClickOpen}>\r\n                <AddCircleIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar} position=\"fixed\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            프로젝트 생성\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleValidateValue}>\r\n                            save\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Container>\r\n                    <Container maxWidth=\"xs\">\r\n                        <Typography className={classes.stepperTitleStyle} variant=\"h4\" align=\"center\">\r\n                            <IconButton color=\"inherit\"><NotificationImportantIcon fontSize=\"large\" /></IconButton>\r\n                            프로젝트 생성\r\n                        </Typography>\r\n                    </Container>\r\n\r\n                    <Divider />\r\n\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <List>\r\n                                <ListItem>\r\n                                    <ListItemText primary=\"프로젝트명\" />\r\n                                    <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"프로젝트명\" inputProps={TextFieldInputProps} name=\"PROJ_TITLE\" onChange={handleChangeProjectInfos} />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText primary=\"사업 구분\" />\r\n                                    <FormControl className={classes.textFieldStyle} variant=\"outlined\">\r\n                                        {categoryList ?\r\n                                            <Select\r\n                                                labelId=\"PROJ_CATEGORY\"\r\n                                                id=\"PROJ_CATEGORY\"\r\n                                                name=\"PROJ_CATEGORY\"\r\n                                                value={infos.PROJ_CATEGORY ? infos.PROJ_CATEGORY : ''}\r\n                                                onChange={handleChangeProjectInfos}\r\n                                            >\r\n                                                {categoryList.map((item, index) => {\r\n                                                    return (\r\n                                                        <MenuItem key={index} value={item.CATEGORY_PK}>{item.CATEGORY_NAME}</MenuItem>\r\n                                                    )\r\n                                                })}\r\n                                            </Select>\r\n                                            :\r\n                                            ''\r\n                                        }\r\n                                    </FormControl>\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText primary=\"프로젝트 설명\" />\r\n                                    <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"프로젝트 설명\" inputProps={TextFieldInputProps} name=\"PROJ_DESCRIPTION\" onChange={handleChangeProjectInfos} />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText primary=\"프로젝트 담당자\" />\r\n                                    <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"프로젝트 담당자\" inputProps={TextFieldInputProps} name=\"PROJ_MANAGER\" onChange={handleChangeProjectInfos} />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText primary=\"프로젝트 참여 인원 구성\" />\r\n                                    <PersonList />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </List>\r\n\r\n                            <ListItem>\r\n                                <ListItemText primary=\"기관명\" />\r\n                                <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"기관명\" inputProps={TextFieldInputProps} name=\"PROJ_AGENCY_NAME\" onChange={handleChangeProjectInfos} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem>\r\n                                <ListItemText primary=\"기관 담당자\" />\r\n                                <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"기관 담당자\" inputProps={TextFieldInputProps} name=\"PROJ_AGENCY_MANAGER\" onChange={handleChangeProjectInfos} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem>\r\n                                <ListItemText primary=\"기관 담당자 번호\" />\r\n                                <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"기관 담당자 번호\" inputProps={TextFieldInputProps} name=\"PROJ_AGENCY_MANAGER_PHONE\" onChange={handleChangeProjectInfos} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem>\r\n                                <ListItemText primary=\"기관 담당자 이메일 주소\" />\r\n                                <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"기관 담당자 이메일 주소\" inputProps={TextFieldInputProps} name=\"PROJ_AGENCY_MANAGER_EMAIL\" onChange={handleChangeProjectInfos} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem>\r\n                                <ListItemText primary=\"프로젝트 과업 수\" />\r\n                                <TextField className={classes.textFieldStyle} variant=\"outlined\" placeholder=\"프로젝트 과업 수\" inputProps={TextFieldInputProps} name=\"PROJ_MAX_TASK\" onChange={handleChangeProjectInfos} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </Grid>\r\n                        {/* <Box className={classes.center}>\r\n                            <Button\r\n                                className={classes.buttonStyle}\r\n                                variant=\"outlined\"\r\n                                color=\"inherit\"\r\n                                onClick={() => {}}\r\n                                size=\"large\"\r\n                            >\r\n                                제출\r\n                            </Button>\r\n                        </Box> */}\r\n                    </Grid>\r\n                </Container>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n// const stepNames = [\r\n//     '프로젝트',\r\n//     '기관'\r\n// ];\r\n\r\n// const handleClickSteps = (type) => {\r\n//     switch (type) {\r\n//         case \"NEXT\":\r\n//             setSteps(steps + 1);\r\n//             break;\r\n\r\n//         case \"PREV\":\r\n//             setSteps(steps - 1);\r\n//             break;\r\n\r\n//         case \"FINISH\":\r\n//             console.log(\"Finish\");\r\n//             setSteps(steps + 1);\r\n//             break;\r\n\r\n//         default:\r\n//             break;\r\n//     }\r\n// }","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nimport {\r\n    Container, Grid, Grow, Paper,\r\n    withStyles,\r\n} from '@material-ui/core';\r\n\r\nimport UICircularProgress from '../../common/UICircularProgress'\r\nimport ProjectCard from './ProjectCard'\r\nimport ProjectAddDialog from './ProjectAddDialog'\r\n// import { SatelliteTwoTone } from '@material-ui/icons';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(6)\r\n    },\r\n    m2: {\r\n        display: \"inline-block\",\r\n        margin: theme.spacing(2)\r\n    },\r\n    relative: {\r\n        position: 'relative',\r\n        height: '272px',\r\n    },\r\n});\r\n\r\nexport class Projects extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            projects: null,\r\n            awhile: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            ...this.state,\r\n            awhile: true\r\n        });\r\n\r\n        this.getProjectList();\r\n    }\r\n\r\n    // TODO 내가속한프로젝트보기\r\n    // TODO 프로젝트 리스트\r\n    // TODO 카드 구현\r\n    // TODO 그로우 구현\r\n    // TODO 플러스 버튼 다이얼로그 구현\r\n    // TODO DB 프로젝트참여자리스트 구현 \r\n\r\n    getProjectList = () => {\r\n        const URL = '/projects';\r\n        const params = this.props.member;\r\n        axios.get(URL, {\r\n            params: {\r\n                ...params\r\n            }\r\n        }).then(res => {\r\n            this.setState({\r\n                ...this.state,\r\n                projects: res.data\r\n            });\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Container className={classes.root}>\r\n                {\r\n                    this.state.projects === null ?\r\n                        <UICircularProgress />\r\n                        :\r\n                        <Grid container>\r\n                            <Grid container spacing={3}>\r\n\r\n                                {this.state.projects.map((item, index) => {\r\n                                    return (\r\n                                        <ProjectCard\r\n                                            key={index}\r\n                                            infos={item}\r\n                                        />\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                                <Grid item xs={12} md={6} lg={4} >\r\n                                    <Grow\r\n                                        in={this.state.awhile}\r\n                                        style={{ transformOrigin: '0 0 0' }}\r\n                                        {...(this.state.awhile ? { timeout: 800 } : {})}\r\n                                    >\r\n                                        <Paper elevation={4} className={classes.relative}>\r\n                                            <ProjectAddDialog />\r\n                                        </Paper>\r\n                                    </Grow>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    member: state.user.member\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Projects))\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nexport class Error_404 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Error_404\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Error_404)","import React, { Component } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport CustomRoute from './components/common/CustomRoutes'\r\nimport Redirection from './components/Pages/Redirection';\r\nimport Login from './components/Pages/Login';\r\nimport Register from './components/Pages/Register';\r\nimport Landing from './components/Pages/Landing'\r\nimport Projects from './components/Pages/Projects'\r\nimport PageNotFound from './components/Pages/Error/404'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <CustomRoute exact path=\"/login\" component={Login} />\r\n        <CustomRoute exact path=\"/register\" component={Register} />\r\n        <CustomRoute exact path=\"/landing\" component={Landing} />\r\n        <CustomRoute exact path=\"/projects\" component={Projects} />\r\n        <CustomRoute component={Redirection} />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (App);\r\n","import * as types from '../_actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    number: 0,\r\n    dumbObject: {\r\n        d: 0,\r\n        u: 1,\r\n        m: 2,\r\n        b: 3\r\n    }\r\n};\r\n\r\nconst counter = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        // ────────────────────────────────────────────────────────────────────────────\r\n        case types.NUMBER_INCREMENT:\r\n            return {\r\n                ...state,\r\n                number: state.number + 1,\r\n                // Object 내용 일부만 수정시 아래와 같이 진행\r\n                dumbObject: {\r\n                    ...state.dumbObject,\r\n                    u: 4\r\n                }\r\n            };\r\n\r\n        // ────────────────────────────────────────────────────────────────────────────\r\n        case types.NUMBER_DECREMENT:\r\n            return {\r\n                ...state,\r\n                number: state.number - 1,\r\n            }\r\n\r\n        // ────────────────────────────────────────────────────────────────────────────\r\n        // 기존 상태 그대로 리턴\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counter;","import * as types from '../_actions/ActionTypes';\r\n\r\n// DB 살리고 함수형으로 바꾸기\r\n\r\nconst getAuthSessionStorage = () => {\r\n    return sessionStorage.getItem('member') !== null ? true : false\r\n}\r\n\r\nconst getMemberSessionStorage = () => {\r\n    // 초기 상태\r\n    return sessionStorage.getItem('member') !== null ? JSON.parse(sessionStorage.getItem('member')) : null\r\n}\r\n\r\nconst initialState = {\r\n    auth: getAuthSessionStorage(),\r\n    member: getMemberSessionStorage(),\r\n    projectMember: []\r\n};\r\n\r\nconst user = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        // ────────────────────────────────────────────────────────────────────────────\r\n        case types.GET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                auth: true,\r\n                // 로그인\r\n                member: JSON.parse(sessionStorage.getItem('member'))\r\n            };\r\n\r\n        case types.OUT_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                auth: false,\r\n                member: null\r\n            };\r\n\r\n        case types.DEV_SET_AUTH:\r\n            return {\r\n                ...state,\r\n                auth: true,\r\n                // 개발 로그인\r\n                member: JSON.parse(sessionStorage.getItem('member'))\r\n            };\r\n\r\n        case types.SET_PROJECT_PERSON_LIST:\r\n            \r\n            let _temp = state.projectMember;\r\n            let status = false;\r\n\r\n            for (let idx in _temp) {\r\n                if (_temp[idx].id === action.payload.id) {\r\n                    _temp.splice(idx, 1);\r\n                    status = true;\r\n                }\r\n            }\r\n\r\n            if (status) return { ...state, projectMember: _temp }\r\n            else return {\r\n                ...state,\r\n                projectMember: [\r\n                    ...state.projectMember,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.SET_PROJECT_PERSON_LIST_INIT:\r\n            \r\n            return {\r\n                ...state,\r\n                projectMember : []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","import { createMuiTheme } from '@material-ui/core';\r\nimport { purple, teal, blue, blueGrey, orange } from \"@material-ui/core/colors\";\r\n\r\nconst theme = {\r\n    dark: createMuiTheme({\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#202020'\r\n            },\r\n            secondary: {\r\n                main: '#FFF',\r\n            },\r\n            text: {\r\n                primary: \"#FFF\",\r\n                secondary: \"#FFF\",\r\n            },\r\n        },\r\n    }),\r\n\r\n    purple: createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: purple[500],\r\n            },\r\n            secondary: {\r\n                main: '#f44336',\r\n            },\r\n            background: {\r\n                default: purple[100],\r\n                paper: purple[300],\r\n                button: purple[500]\r\n            },\r\n            text: {\r\n                primary: \"#712c7d\",\r\n            }\r\n        },\r\n    }),\r\n\r\n    teal: createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: teal[500]\r\n            },\r\n            secondary: {\r\n                main: '#cddc39',\r\n            },\r\n            background: {\r\n                default: teal[100],\r\n                paper: teal[300],\r\n                button: teal[500]\r\n            },\r\n            text: {\r\n                primary: teal[900]\r\n            }\r\n        }\r\n    }),\r\n\r\n    blue: createMuiTheme({\r\n        palette: {\r\n            primary: blue,\r\n            secondary: blueGrey,\r\n            background: {\r\n                default: blue[100],\r\n                paper: blue[300],\r\n                button: blue[500]\r\n            },\r\n            text: {\r\n                primary: blue[900]\r\n            }\r\n        },\r\n    }),\r\n\r\n    orange: createMuiTheme({\r\n        palette: {\r\n            primary: orange,\r\n            background: {\r\n                default: orange[300],\r\n                paper: orange[500],\r\n                button: orange[700]\r\n            },\r\n            text: {\r\n                primary: \"#a04500\"\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport default theme;","import * as types from '../_actions/ActionTypes';\r\nimport Themes from '../components/common/Theme'\r\n\r\nconst message = function () {\r\n    const date = new Date();\r\n    let greeting = date.getHours();\r\n\r\n    return greeting >= 20 ? '편안한 밤 되세요.'\r\n        : greeting >= 18 ? '맛있는 식사 하세요!'\r\n            : greeting >= 13 ? '오후도 힘내세요.'\r\n                : greeting >= 12 ? '식사 맛있게 하세요!'\r\n                    : greeting >= 10 ? '오전 힘내세요!'\r\n                        : greeting >= 9 ? '좋은 아침입니다.'\r\n                            : greeting >= 6 ? '너무 이른데요..' : '굿밤!'\r\n}\r\n\r\nconst initialState = {\r\n    color: 'default',\r\n    nowThemeNum : 0,\r\n    theme: Themes.dark,\r\n    bgColor: \"#424242\",\r\n    hourlyGreetings: message(),\r\n    menuAppearPosition: 'left'\r\n};\r\n\r\nconst ui = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n\r\n        // ────────────────────────────────────────────────────────────────────────────\r\n        case types.SET_COLOR:\r\n            return {\r\n                ...state,\r\n                color: state.color === 'default' ? 'primary' : 'default'\r\n            };\r\n\r\n        case types.SET_MENU_APPEAR_POSITION:\r\n            return {\r\n                ...state,\r\n                menuAppearPosition:\r\n                    (state.menuAppearPosition === 'left') ? 'top' :\r\n                        (state.menuAppearPosition === 'top') ? 'right' :\r\n                            (state.menuAppearPosition === 'right') ? 'bottom' : 'left'\r\n            };\r\n\r\n        case types.SET_THEME:\r\n            if(state.nowThemeNum === Object.keys(Themes).length - 1){\r\n                return {\r\n                    ...state,\r\n                    nowThemeNum : 0,\r\n                    theme: Themes[Object.keys(Themes)[0]]\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    nowThemeNum : state.nowThemeNum + 1,\r\n                    theme: Themes[Object.keys(Themes)[state.nowThemeNum + 1]]\r\n                };\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default ui;","import * as types from '../_actions/ActionTypes';\r\n\r\nconst getNowEnv = () => {\r\n    let dev = window.location.hostname.indexOf('localhost') !== -1;\r\n    return dev; \r\n}\r\n\r\nconst initialState = {\r\n    dev : getNowEnv()\r\n};\r\n\r\nconst Config = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        // ────────────────────────────────────────────────────────────────────────────\r\n        case types.ENV_IS_DEV:\r\n            return {\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default Config;","import { combineReducers } from 'redux';\r\nimport counter from './counter';\r\nimport user from './user';\r\nimport ui from './ui';\r\nimport config from './config';\r\n\r\nconst reducers = combineReducers({\r\n    counter, ui, user, config\r\n});\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport reducers from '../_reducers';\r\n\r\nconst store = createStore(reducers);\r\nstore.subscribe(() => console.log(store.getState()));\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withSnackbar } from 'notistack'\r\nimport { Button } from '@material-ui/core'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nexport class UISnackBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    handleCloseSnackBar = () => {\r\n        this.props.closeSnackbar(this.props.goods);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button\r\n                color=\"inherit\"\r\n                onClick={this.handleCloseSnackBar}\r\n            >\r\n                <CancelIcon />\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(UISnackBar))\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport './css/init.css';\r\nimport './css/mediaQuery.css';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport Store from './_store'\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport UISnackBar from './components/common/UISnackBar';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <BrowserRouter>\r\n        <SnackbarProvider maxSnack={5} anchorOrigin={{ vertical: 'bottom', horizontal: 'left', }} action={(key) => (<UISnackBar goods={key} />)} >\r\n          <CssBaseline />\r\n          <App />\r\n        </SnackbarProvider>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}